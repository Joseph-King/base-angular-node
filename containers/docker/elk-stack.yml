services:
  # Node JS server. Image needs to be built before docker compose command. Use the local-all.sh script

  # No SQL database
  elasticsearch:
    build: 
      context: ../config/elastic
      dockerfile: Containerfile
    container_name: elasticsearch
    env_file: ../config/elastic/dev.env
    mem_limit: 2g
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "--user", "elastic:elastic", "http://localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 5

  # Web application that works with elasticsearch. Allows user to visualize data
  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.2
    container_name: kibana
    links:
      - "elasticsearch"
    env_file: ../config/elastic/dev.env
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD", "curl", "--user", "elastic:elastic", "http://localhost:5601"]
      interval: 10s
      timeout: 10s
      retries: 5

    # Logging service that works with elasticsearch
  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.2
    container_name: logstash
    links:
      - "elasticsearch"
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ../config/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ../config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
    ports:
      - "5044:5044"

volumes:
  es-data:
    driver: local